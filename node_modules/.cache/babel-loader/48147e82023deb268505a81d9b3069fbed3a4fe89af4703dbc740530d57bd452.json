{"ast":null,"code":"var _jsxFileName = \"/Users/msimio/playlisttracks2/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './ExternalStylesheet.css';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const getData = () => {\n    var requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n    fetch(\"http://localhost:3001/tracks\", requestOptions).then(response => response.json()).then(result => setPosts(result)).catch(error => console.log(\"error\", error));\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  var counter = 0;\n\n  //Add ids\n  for (var i = 0; i < posts.length; i++) {\n    posts[i].trackid = \"Hello\";\n  }\n\n  ///****Hooks/states */\n  const [title, setTitle] = useState(\"Playing: Billie Jean\");\n  const [idx, setIdx] = useState(0);\n\n  //create a hook to set id for incrementing/decrementing\n  //states?? for playing\n\n  //const onDoubleClickCaptureHandler = event => setTitle(\"Changed text\");\n\n  /*\n  const onDoubleClickCaptureHandler = () => \n  {\n    console.log(\"You have Clicked Twice\");\n    songVar=\"Hello\"\n  };\n  */\n\n  ///***Assignment 2 lists and mapping */\n  //***Apply logic here */\n  //var arr = []\n\n  //logic done in components\n\n  //const listItems = arr.map(item => <li>{item}</li>);\n  //<ul style={{ listStyleType: \"none\" }}>{listItems}</ul>\n\n  const handleClick = () => {\n    setTitle(\"Playing: Current ID\");\n  };\n  const handleClick2 = () => {\n    setTitle(\"Playing: Current ID2\");\n  };\n  const handleClick3 = () => {\n    setTitle(arr0[0]);\n  };\n  const handleClick4 = () => {\n    setTitle(arr0[1]);\n  };\n  var arr = [];\n  var arr0 = [];\n  //might need to nest these to get things to work\n\n  //json to array\n  for (var i = 0; i < posts.length; i++) {\n    arr0.push(Object.values(posts[i]));\n  }\n\n  //Nested\n  /*\n   for (let i= 0; i < posts.length; i += 1) {\n    const element = posts[i];\n    Object.values(element).forEach((r) => { arr.push(r) });\n  }\n  */\n\n  //Create title array for nexr/prev from array from json\n  //Just do the whole messy thing for now\n\n  //try to create ids when mapping in return to increment/decrement\n\n  //Or do the mapping and array here and create ids\n\n  //The song or podcast components are wrapped in an h3\n\n  function someFunc() {\n    setTitle(\"Playing: Current ID\");\n    setIdx(3);\n    //Loop through arr0 searching for a match\n  }\n  function someFunc2() {\n    setTitle(\"Playing: Current ID\");\n    setIdx(idx + 1);\n    //Loop through arr0 searching for a match\n  }\n  function someFunc3() {\n    setTitle(\"Playing: Current ID\");\n    setIdx(idx - 1);\n    //Loop through arr0 searching for a match\n  }\n\n  ///need an array and logic outside of the return function\n  //with ids\n\n  //title or episodetitle\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: arr0[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: arr[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        onDoubleClick: () => setTitle(\"Playing: \" + post.title + post.episodeTitle),\n        children: [/*#__PURE__*/_jsxDEV(Song, {\n          songtitle: post.title,\n          artist: post.artist,\n          year: post.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Podcast, {\n          season: post.season,\n          episode: post.episode,\n          episodeTitle: post.episodeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.trackid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Shuffle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick2,\n      children: \"Play/Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick3,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick4,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"0myYwh3OxoojVx6AHsi6KnqpyQM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Song","Podcast","jsxDEV","_jsxDEV","App","_s","posts","setPosts","getData","requestOptions","method","redirect","fetch","then","response","json","result","catch","error","console","log","counter","i","length","trackid","title","setTitle","idx","setIdx","handleClick","handleClick2","handleClick3","arr0","handleClick4","arr","push","Object","values","someFunc","someFunc2","someFunc3","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","onDoubleClick","episodeTitle","songtitle","artist","year","season","episode","onClick","_c","$RefreshReg$"],"sources":["/Users/msimio/playlisttracks2/src/Playlist.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './ExternalStylesheet.css';\nimport Song from './Song';\nimport Podcast from './Podcast';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n\n  const getData = () => {\n    var requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\",\n    };\n\n    fetch(\"http://localhost:3001/tracks\", requestOptions)\n      .then((response) => response.json())\n      .then((result) => setPosts(result))\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  var counter = 0;\n\n  //Add ids\n  for(var i=0; i < posts.length; i++)\n  {\n    posts[i].trackid=\"Hello\"\n  }\n\n\n  ///****Hooks/states */\n  const [title, setTitle] = useState(\"Playing: Billie Jean\");\n  const [idx, setIdx] = useState(0);\n\n  //create a hook to set id for incrementing/decrementing\n  //states?? for playing\n\n  //const onDoubleClickCaptureHandler = event => setTitle(\"Changed text\");\n\n  /*\n  const onDoubleClickCaptureHandler = () => \n  {\n    console.log(\"You have Clicked Twice\");\n    songVar=\"Hello\"\n  };\n  */\n\n\n  \n\n\n\n  ///***Assignment 2 lists and mapping */\n  //***Apply logic here */\n  //var arr = []\n\n\n  //logic done in components\n\n  //const listItems = arr.map(item => <li>{item}</li>);\n  //<ul style={{ listStyleType: \"none\" }}>{listItems}</ul>\n\n  const handleClick = () => {setTitle(\"Playing: Current ID\")};\n  const handleClick2 = () => {setTitle(\"Playing: Current ID2\")};\n  const handleClick3 = () => {setTitle(arr0[0])};\n  const handleClick4 = () => {setTitle(arr0[1])};\n\n \n  var arr = []\n  var arr0 = []\n  //might need to nest these to get things to work\n\n  //json to array\n  for(var i=0; i < posts.length; i++)\n  {\n    arr0.push(Object.values(posts[i]));\n  }\n\n  //Nested\n  /*\n\n  for (let i= 0; i < posts.length; i += 1) {\n    const element = posts[i];\n    Object.values(element).forEach((r) => { arr.push(r) });\n }\n */\n\n\n //Create title array for nexr/prev from array from json\n //Just do the whole messy thing for now\n\n\n\n //try to create ids when mapping in return to increment/decrement\n\n //Or do the mapping and array here and create ids\n\n //The song or podcast components are wrapped in an h3\n\n function someFunc() {\n    setTitle(\"Playing: Current ID\")\n    setIdx(3)\n    //Loop through arr0 searching for a match\n  }\n\n  function someFunc2() {\n    setTitle(\"Playing: Current ID\")\n    setIdx(idx+1)\n    //Loop through arr0 searching for a match\n  }\n\n  function someFunc3() {\n    setTitle(\"Playing: Current ID\")\n    setIdx(idx-1)\n    //Loop through arr0 searching for a match\n  }\n\n\n\n  ///need an array and logic outside of the return function\n  //with ids\n\n  \n\n\n\n  //title or episodetitle\n  return (\n    <div>\n      <h1>{arr0[0]}</h1>\n      <h1>{arr[0]}</h1>\n      \n      {posts.map((post) => (\n        <div>\n          <h3 onDoubleClick={() => setTitle(\"Playing: \" + post.title+post.episodeTitle)}>\n            <Song songtitle={post.title} artist= {post.artist} year={post.year} />\n            <Podcast season={post.season} episode= {post.episode} episodeTitle={post.episodeTitle}/>\n            <p>{post.trackid}</p>\n          </h3>\n        </div>\n      ))}\n\n      <button onClick={handleClick}>Shuffle</button>\n      <button onClick={handleClick2}>Play/Pause</button>\n      <button onClick={handleClick3}>Previous</button>\n      <button onClick={handleClick4}>Next</button>\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}