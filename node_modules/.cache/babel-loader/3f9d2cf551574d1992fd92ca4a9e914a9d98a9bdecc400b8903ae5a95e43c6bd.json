{"ast":null,"code":"var _jsxFileName = \"/Users/msimio/playlisttracks/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './ExternalStylesheet.css';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const getData = () => {\n    var requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n    fetch(\"http://localhost:3001/tracks\", requestOptions) ////This is cheating. I edited the json structure. Logic for properly displaying items.\n    .then(response => response.json()).then(result => setPosts(result)).catch(error => console.log(\"error\", error));\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  ///****Hooks/states */\n  const [title, setTitle] = useState(\"Status Display\");\n  //const [idx, setidx] = useState(0);\n\n  //create a hook to set id for incrementing/decrementing\n  //states?? for playing\n\n  //const onDoubleClickCaptureHandler = event => setTitle(\"Changed text\");\n\n  /*\n  const onDoubleClickCaptureHandler = () => \n  {\n    console.log(\"You have Clicked Twice\");\n    songVar=\"Hello\"\n  };\n  */\n\n  ///***Assignment 2 lists and mapping */\n  //***Apply logic here */\n  //var arr = []\n\n  //logic done in components\n\n  //const listItems = arr.map(item => <li>{item}</li>);\n  //<ul style={{ listStyleType: \"none\" }}>{listItems}</ul>\n\n  const handleClick = () => {\n    setTitle(\"Playing: Current ID\");\n  };\n  const handleClick2 = () => {\n    setTitle(\"Playing: Current ID2\");\n  };\n  const handleClick3 = () => {\n    setTitle(\"Playing: Current ID3\");\n  };\n  const handleClick4 = () => {\n    setTitle(\"Playing: Current ID4\");\n  };\n  var arr = [];\n  var arr0 = [];\n  //might need to nest these to get things to work\n\n  //json to array\n  for (var i = 0; i < posts.length; i++) {\n    arr0.push(Object.values(posts[i]));\n  }\n\n  //Nested\n\n  for (let i = 0; i < posts.length; i += 1) {\n    const element = posts[i];\n    Object.values(element).forEach(r => {\n      arr.push(r);\n    });\n  }\n\n  //try to create ids when mapping in return to increment/decrement\n\n  //Or do the mapping and array here and create ids\n\n  //The song or podcast components are wrapped in an h3\n\n  //title or episodetitle\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: arr0[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: arr[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        onDoubleClick: () => setTitle(\"Playing:\" + post.title),\n        children: [/*#__PURE__*/_jsxDEV(Song, {\n          songtitle: post.title,\n          artist: post.artist,\n          year: post.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Podcast, {\n          season: post.season,\n          episode: post.episode,\n          episodeTitle: post.episodeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Shuffle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick2,\n      children: \"Play/Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick3,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick4,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vu/DVlL2pELnGJ36j/8S5Cb4SWo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Song","Podcast","jsxDEV","_jsxDEV","App","_s","posts","setPosts","getData","requestOptions","method","redirect","fetch","then","response","json","result","catch","error","console","log","title","setTitle","handleClick","handleClick2","handleClick3","handleClick4","arr","arr0","i","length","push","Object","values","element","forEach","r","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","onDoubleClick","songtitle","artist","year","season","episode","episodeTitle","onClick","_c","$RefreshReg$"],"sources":["/Users/msimio/playlisttracks/src/Playlist.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './ExternalStylesheet.css';\nimport Song from './Song';\nimport Podcast from './Podcast';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n\n  const getData = () => {\n    var requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\",\n    };\n\n    fetch(\"http://localhost:3001/tracks\", requestOptions)////This is cheating. I edited the json structure. Logic for properly displaying items.\n      .then((response) => response.json())\n      .then((result) => setPosts(result))\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n\n  ///****Hooks/states */\n  const [title, setTitle] = useState(\"Status Display\");\n  //const [idx, setidx] = useState(0);\n\n  //create a hook to set id for incrementing/decrementing\n  //states?? for playing\n\n  //const onDoubleClickCaptureHandler = event => setTitle(\"Changed text\");\n\n  /*\n  const onDoubleClickCaptureHandler = () => \n  {\n    console.log(\"You have Clicked Twice\");\n    songVar=\"Hello\"\n  };\n  */\n\n\n  \n\n\n\n  ///***Assignment 2 lists and mapping */\n  //***Apply logic here */\n  //var arr = []\n\n\n  //logic done in components\n\n  //const listItems = arr.map(item => <li>{item}</li>);\n  //<ul style={{ listStyleType: \"none\" }}>{listItems}</ul>\n\n  const handleClick = () => {setTitle(\"Playing: Current ID\")};\n  const handleClick2 = () => {setTitle(\"Playing: Current ID2\")};\n  const handleClick3 = () => {setTitle(\"Playing: Current ID3\")};\n  const handleClick4 = () => {setTitle(\"Playing: Current ID4\")};\n\n  var arr = []\n  var arr0 = []\n  //might need to nest these to get things to work\n\n  //json to array\n  for(var i=0; i < posts.length; i++)\n  {\n    arr0.push(Object.values(posts[i]));\n  }\n\n  //Nested\n\n  for (let i= 0; i < posts.length; i += 1) {\n    const element = posts[i];\n    Object.values(element).forEach((r) => { arr.push(r) });\n }\n\n\n //try to create ids when mapping in return to increment/decrement\n\n //Or do the mapping and array here and create ids\n\n //The song or podcast components are wrapped in an h3\n\n\n\n\n\n\n\n  //title or episodetitle\n  return (\n    <div>\n      <h1>{arr0[0]}</h1>\n      <h1>{arr[0]}</h1>\n      {posts.map((post) => (\n        <div>\n          <h3 onDoubleClick={() => setTitle(\"Playing:\" + post.title)}>\n            <Song songtitle={post.title} artist= {post.artist} year={post.year} />\n            <Podcast season={post.season} episode= {post.episode} episodeTitle={post.episodeTitle}/>\n          </h3>\n        </div>\n      ))}\n\n      <button onClick={handleClick}>Shuffle</button>\n      <button onClick={handleClick2}>Play/Pause</button>\n      <button onClick={handleClick3}>Previous</button>\n      <button onClick={handleClick4}>Next</button>\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}