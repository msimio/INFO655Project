{"ast":null,"code":"var _jsxFileName = \"/Users/msimio/playlisttracks3/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './ExternalStylesheet.css';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport Next from './Next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const getData = () => {\n    var requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n    fetch(\"http://localhost:3001/tracks\", requestOptions).then(response => response.json()).then(result => setPosts(result)).catch(error => console.log(\"error\", error));\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  //Add ids\n  for (var i = 0; i < posts.length; i++) {\n    posts[i].trackid = i;\n  }\n\n  ///****Hooks/states */\n  const [title, setTitle] = useState(\"Status Display\");\n  const [idx, setIdx] = useState(0);\n  const [playing, setPlaying] = useState(true);\n\n  //create a hook to set id for incrementing/decrementing\n  //states?? for playing\n\n  //const onDoubleClickCaptureHandler = event => setTitle(\"Changed text\");\n\n  /*\n  const onDoubleClickCaptureHandler = () => \n  {\n    console.log(\"You have Clicked Twice\");\n    songVar=\"Hello\"\n  };\n  */\n\n  ///***Assignment 2 lists and mapping */\n  //***Apply logic here */\n  //var arr = []\n\n  //logic done in components\n\n  //const listItems = arr.map(item => <li>{item}</li>);\n  //<ul style={{ listStyleType: \"none\" }}>{listItems}</ul>\n\n  var arr = [];\n  var arr0 = [];\n  //might need to nest these to get things to work\n\n  //json to array\n  for (var j = 0; j < posts.length; j++) {\n    arr0.push(Object.values(posts[j]));\n  }\n\n  //Nested\n\n  ///Title array\n\n  for (let i = 0; i < posts.length; i += 1) {\n    const element = posts[i];\n    //Object.values(element).forEach((r) =>{\n    if (element.title) {\n      arr.push(element.title);\n    }\n    if (element.episodeTitle) {\n      arr.push(element.episodeTitle);\n    }\n  }\n  //}\n  //);\n\n  //Object.values(element).forEach((r) => { arr.push(r) });\n\n  ///Get title only\n  ///Look for something called title or episodeTitle\n\n  const handleClick = () => {\n    var myrand = Math.floor(Math.random() * arr.length);\n    setTitle(\"Playing: \" + arr[myrand]);\n    setIdx(myrand);\n    setPlaying(true);\n  };\n  const handleClick2 = () => {\n    setTitle(\"Paused\");\n    if (playing === true) {\n      setTitle(\"Paused\");\n      setPlaying(false);\n    } else {\n      setTitle(\"Playing: \" + arr[idx]);\n      setPlaying(true);\n    }\n  };\n\n  //Possible if statements for <0 and >posts.length\n\n  const handleClick3 = () => {\n    setIdx(idx - 1);\n    if (idx === 0) {\n      setIdx(posts.length - 1);\n      setTitle(\"Playing: \" + arr[posts.length - 1]);\n      setPlaying(true);\n    } else {\n      setTitle(\"Playing: \" + arr[idx - 1]);\n      setPlaying(true);\n    }\n    ; //Json[id].title}\n  };\n  const handleClick4 = () => {\n    setIdx(idx + 1);\n    if (idx > posts.length - 2) {\n      setIdx(0);\n      setTitle(\"Playing: \" + arr[0]);\n      setPlaying(true);\n    } else {\n      setTitle(\"Playing: \" + arr[idx + 1]);\n      setPlaying(true);\n    }\n    ;\n  };\n\n  //*** */\n  //Implemnent doubleclick method to set idx and title\n  //*** */\n\n  //Create title array for nexr/prev from array from json\n  //Just do the whole messy thing for now\n\n  //try to create ids when mapping in return to increment/decrement\n\n  //Or do the mapping and array here and create ids\n\n  //The song or podcast components are wrapped in an h3\n  /*\n  function someFunc() {\n    setTitle(\"Playing: Current ID\")\n    setIdx(3)\n    //Loop through arr0 searching for a match\n  }\n  */\n\n  ///need an array and logic outside of the return function\n  //with ids\n\n  //title or episodetitle\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"white\"\n      },\n      children: \"My Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        onDoubleClick: () => {\n          setIdx(post.trackid);\n          if (post.title) {\n            setTitle(\"Playing: \" + post.title);\n          }\n          ;\n          if (post.episodeTitle) {\n            setTitle(\"Playing: \" + post.episodeTitle);\n          }\n          setPlaying(true);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Song, {\n          songtitle: post.title,\n          artist: post.artist,\n          year: post.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Podcast, {\n          season: post.season,\n          episode: post.episode,\n          episodeTitle: post.episodeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Shuffle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick2,\n      children: \"Play/Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick3,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Next, {\n      onClick: handleClick4,\n      trackindex: idx,\n      trackarray: arr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8GluReck9eEy2D3ZZ3NNcKzIYw0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Song","Podcast","Next","jsxDEV","_jsxDEV","App","_s","posts","setPosts","getData","requestOptions","method","redirect","fetch","then","response","json","result","catch","error","console","log","i","length","trackid","title","setTitle","idx","setIdx","playing","setPlaying","arr","arr0","j","push","Object","values","element","episodeTitle","handleClick","myrand","Math","floor","random","handleClick2","handleClick3","handleClick4","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","map","post","onDoubleClick","songtitle","artist","year","season","episode","onClick","trackindex","trackarray","_c","$RefreshReg$"],"sources":["/Users/msimio/playlisttracks3/src/Playlist.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './ExternalStylesheet.css';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport Next from './Next'\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n\n  const getData = () => {\n    var requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\",\n    };\n\n    fetch(\"http://localhost:3001/tracks\", requestOptions)\n      .then((response) => response.json())\n      .then((result) => setPosts(result))\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n\n  //Add ids\n  for(var i=0; i < posts.length; i++)\n  {\n    posts[i].trackid= i\n  }\n\n\n  ///****Hooks/states */\n  const [title, setTitle] = useState(\"Status Display\");\n  const [idx, setIdx] = useState(0);\n  const [playing, setPlaying] = useState(true);\n\n  //create a hook to set id for incrementing/decrementing\n  //states?? for playing\n\n  //const onDoubleClickCaptureHandler = event => setTitle(\"Changed text\");\n\n  /*\n  const onDoubleClickCaptureHandler = () => \n  {\n    console.log(\"You have Clicked Twice\");\n    songVar=\"Hello\"\n  };\n  */\n\n\n  \n\n\n\n  ///***Assignment 2 lists and mapping */\n  //***Apply logic here */\n  //var arr = []\n\n\n  //logic done in components\n\n  //const listItems = arr.map(item => <li>{item}</li>);\n  //<ul style={{ listStyleType: \"none\" }}>{listItems}</ul>\n\n  \n\n \n  var arr = []\n  var arr0 = []\n  //might need to nest these to get things to work\n\n  //json to array\n  for(var j=0; j < posts.length; j++)\n  {\n    arr0.push(Object.values(posts[j]));\n  }\n\n  //Nested\n  \n\n\n  ///Title array\n\n  for (let i= 0; i < posts.length; i += 1) \n  {\n    const element = posts[i];\n    //Object.values(element).forEach((r) =>{\n    if(element.title)\n    { arr.push(element.title) }\n    if(element.episodeTitle)\n    { arr.push(element.episodeTitle) }\n  }\n  //}\n  //);\n\n    //Object.values(element).forEach((r) => { arr.push(r) });\n\n \n\n\n ///Get title only\n ///Look for something called title or episodeTitle\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  const handleClick = () => {var myrand=Math.floor(Math.random() * arr.length);setTitle(\"Playing: \"+arr[myrand]);setIdx(myrand);setPlaying(true)};\n  const handleClick2 = () => {setTitle(\"Paused\")\n                            if(playing===true){setTitle(\"Paused\");setPlaying(false)}\n                            else{setTitle(\"Playing: \"+arr[idx]);setPlaying(true)}\n\n\n};\n\n  //Possible if statements for <0 and >posts.length\n\n  const handleClick3 = () => {setIdx(idx-1)\n                              if(idx===0){setIdx(posts.length-1); setTitle(\"Playing: \"+arr[posts.length-1]);setPlaying(true) }\n                              else{setTitle(\"Playing: \"+arr[idx-1]);setPlaying(true)};//Json[id].title}\n  }\n                              \n  const handleClick4 = () => {setIdx(idx+1)\n                              if(idx>posts.length-2){setIdx(0); setTitle(\"Playing: \"+arr[0]);setPlaying(true) }\n                              \n                              else{setTitle(\"Playing: \"+arr[idx+1]);setPlaying(true)};}\n                            \n                              \n\n                              \n\n    //*** */\n  //Implemnent doubleclick method to set idx and title\n  //*** */\n\n //Create title array for nexr/prev from array from json\n //Just do the whole messy thing for now\n\n\n\n //try to create ids when mapping in return to increment/decrement\n\n //Or do the mapping and array here and create ids\n\n //The song or podcast components are wrapped in an h3\n  /*\n function someFunc() {\n    setTitle(\"Playing: Current ID\")\n    setIdx(3)\n    //Loop through arr0 searching for a match\n  }\n  */\n\n\n\n\n  ///need an array and logic outside of the return function\n  //with ids\n\n  \n\n\n\n  //title or episodetitle\n  return (\n    <div>\n      <h1 style={{color:\"white\"}}>My Playlist</h1>\n      {posts.map((post) => (\n        <div>\n          <h3 onDoubleClick={() => {setIdx(post.trackid);if(post.title){setTitle(\"Playing: \"+post.title)};if(post.episodeTitle){setTitle(\"Playing: \"+post.episodeTitle)}setPlaying(true)}}>\n            <Song songtitle={post.title} artist= {post.artist} year={post.year} />\n            <Podcast season={post.season} episode= {post.episode} episodeTitle={post.episodeTitle}/>\n          </h3>\n        </div>\n      ))}\n\n      <button onClick={handleClick}>Shuffle</button>\n      <button onClick={handleClick2}>Play/Pause</button>\n      <button onClick={handleClick3}>Previous</button>\n      <Next onClick={handleClick4} trackindex={idx} trackarray={arr}></Next>\n\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}