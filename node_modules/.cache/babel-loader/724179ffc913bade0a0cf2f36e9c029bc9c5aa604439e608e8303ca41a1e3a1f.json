{"ast":null,"code":"var _jsxFileName = \"/Users/msimio/playlisttracks2/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './ExternalStylesheet.css';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const getData = () => {\n    var requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n    fetch(\"http://localhost:3001/tracks\", requestOptions).then(response => response.json()).then(result => setPosts(result)).catch(error => console.log(\"error\", error));\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  //Add ids\n  for (var i = 0; i < posts.length; i++) {\n    posts[i].trackid = i;\n  }\n\n  ///****Hooks/states */\n  const [title, setTitle] = useState(\"Playing: Billie Jean\");\n  const [idx, setIdx] = useState(0);\n  const [playing, setPlaying] = useState(true);\n\n  //create a hook to set id for incrementing/decrementing\n  //states?? for playing\n\n  //const onDoubleClickCaptureHandler = event => setTitle(\"Changed text\");\n\n  /*\n  const onDoubleClickCaptureHandler = () => \n  {\n    console.log(\"You have Clicked Twice\");\n    songVar=\"Hello\"\n  };\n  */\n\n  ///***Assignment 2 lists and mapping */\n  //***Apply logic here */\n  //var arr = []\n\n  //logic done in components\n\n  //const listItems = arr.map(item => <li>{item}</li>);\n  //<ul style={{ listStyleType: \"none\" }}>{listItems}</ul>\n\n  //var arr = []\n  var arr0 = [];\n  //might need to nest these to get things to work\n\n  //json to array\n  for (var j = 0; j < posts.length; j++) {\n    arr0.push(Object.values(posts[j]));\n  }\n\n  //Nested\n  /*\n   for (let i= 0; i < posts.length; i += 1) {\n    const element = posts[i];\n    Object.values(element).forEach((r) => { arr.push(r) });\n  }\n  */\n\n  const handleClick = () => {\n    setTitle(\"Shuffle\");\n  };\n  const handleClick2 = () => {\n    setTitle(\"Paused\");\n    if (playing === true) {\n      setTitle(\"Paused\");\n      setPlaying(false);\n    } else {\n      setTitle(\"Playing: \" + arr0[idx]);\n      setPlaying(true);\n    }\n  };\n\n  //Possible if statements for <0 and >posts.length\n\n  const handleClick3 = () => {\n    setIdx(idx - 1);\n    if (idx === 0) {\n      setIdx(posts.length - 1);\n      setTitle(\"Playing: \" + arr0[posts.length - 1]);\n    } else {\n      setTitle(\"Playing: \" + arr0[idx - 1]);\n    }\n    ; //Json[id].title}\n  };\n  const handleClick4 = () => {\n    setIdx(idx + 1);\n    if (idx > posts.length - 2) {\n      setIdx(0);\n      setTitle(\"Playing: \" + arr0[0]);\n    } else {\n      setTitle(\"Playing: \" + arr0[idx + 1]);\n    }\n    ;\n  };\n\n  //*** */\n  //Implemnent doubleclick method to set idx and title\n  //*** */\n\n  //Create title array for nexr/prev from array from json\n  //Just do the whole messy thing for now\n\n  //try to create ids when mapping in return to increment/decrement\n\n  //Or do the mapping and array here and create ids\n\n  //The song or podcast components are wrapped in an h3\n  /*\n  function someFunc() {\n    setTitle(\"Playing: Current ID\")\n    setIdx(3)\n    //Loop through arr0 searching for a match\n  }\n  */\n\n  ///need an array and logic outside of the return function\n  //with ids\n\n  //title or episodetitle\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        onDoubleClick: () => {\n          setIdx(post.trackid);\n          setTitle(\"Playing: \" + post.title + post.episodeTitle);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Song, {\n          songtitle: post.title,\n          artist: post.artist,\n          year: post.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Podcast, {\n          season: post.season,\n          episode: post.episode,\n          episodeTitle: post.episodeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.trackid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Shuffle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick2,\n      children: \"Play/Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick3,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick4,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: idx\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5TEabeVWL+34SmH1kRluQ8N41d4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Song","Podcast","jsxDEV","_jsxDEV","App","_s","posts","setPosts","getData","requestOptions","method","redirect","fetch","then","response","json","result","catch","error","console","log","i","length","trackid","title","setTitle","idx","setIdx","playing","setPlaying","arr0","j","push","Object","values","handleClick","handleClick2","handleClick3","handleClick4","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","onDoubleClick","episodeTitle","songtitle","artist","year","season","episode","onClick","_c","$RefreshReg$"],"sources":["/Users/msimio/playlisttracks2/src/Playlist.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './ExternalStylesheet.css';\nimport Song from './Song';\nimport Podcast from './Podcast';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n\n  const getData = () => {\n    var requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\",\n    };\n\n    fetch(\"http://localhost:3001/tracks\", requestOptions)\n      .then((response) => response.json())\n      .then((result) => setPosts(result))\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n\n  //Add ids\n  for(var i=0; i < posts.length; i++)\n  {\n    posts[i].trackid= i\n  }\n\n\n  ///****Hooks/states */\n  const [title, setTitle] = useState(\"Playing: Billie Jean\");\n  const [idx, setIdx] = useState(0);\n  const [playing, setPlaying] = useState(true);\n\n  //create a hook to set id for incrementing/decrementing\n  //states?? for playing\n\n  //const onDoubleClickCaptureHandler = event => setTitle(\"Changed text\");\n\n  /*\n  const onDoubleClickCaptureHandler = () => \n  {\n    console.log(\"You have Clicked Twice\");\n    songVar=\"Hello\"\n  };\n  */\n\n\n  \n\n\n\n  ///***Assignment 2 lists and mapping */\n  //***Apply logic here */\n  //var arr = []\n\n\n  //logic done in components\n\n  //const listItems = arr.map(item => <li>{item}</li>);\n  //<ul style={{ listStyleType: \"none\" }}>{listItems}</ul>\n\n  \n\n \n  //var arr = []\n  var arr0 = []\n  //might need to nest these to get things to work\n\n  //json to array\n  for(var j=0; j < posts.length; j++)\n  {\n    arr0.push(Object.values(posts[j]));\n  }\n\n  //Nested\n  /*\n\n  for (let i= 0; i < posts.length; i += 1) {\n    const element = posts[i];\n    Object.values(element).forEach((r) => { arr.push(r) });\n }\n */\n\n\n  const handleClick = () => {setTitle(\"Shuffle\")};\n  const handleClick2 = () => {setTitle(\"Paused\")\n                            if(playing===true){setTitle(\"Paused\");setPlaying(false)}\n                            else{setTitle(\"Playing: \"+arr0[idx]);setPlaying(true)}\n\n\n};\n\n  //Possible if statements for <0 and >posts.length\n\n  const handleClick3 = () => {setIdx(idx-1)\n                              if(idx===0){setIdx(posts.length-1); setTitle(\"Playing: \"+arr0[posts.length-1]) }\n                              else{setTitle(\"Playing: \"+arr0[idx-1])};//Json[id].title}\n  }\n                              \n  const handleClick4 = () => {setIdx(idx+1)\n                              if(idx>posts.length-2){setIdx(0); setTitle(\"Playing: \"+arr0[0]) }\n                              \n                              else{setTitle(\"Playing: \"+arr0[idx+1])};}\n                            \n                              \n\n                              \n\n    //*** */\n  //Implemnent doubleclick method to set idx and title\n  //*** */\n\n //Create title array for nexr/prev from array from json\n //Just do the whole messy thing for now\n\n\n\n //try to create ids when mapping in return to increment/decrement\n\n //Or do the mapping and array here and create ids\n\n //The song or podcast components are wrapped in an h3\n  /*\n function someFunc() {\n    setTitle(\"Playing: Current ID\")\n    setIdx(3)\n    //Loop through arr0 searching for a match\n  }\n  */\n\n\n\n\n  ///need an array and logic outside of the return function\n  //with ids\n\n  \n\n\n\n  //title or episodetitle\n  return (\n    <div>\n      <h1>My Playlist</h1>\n      {posts.map((post) => (\n        <div>\n          <h3 onDoubleClick={() => {setIdx(post.trackid);setTitle(\"Playing: \"+post.title+post.episodeTitle)}}>\n            <Song songtitle={post.title} artist= {post.artist} year={post.year} />\n            <Podcast season={post.season} episode= {post.episode} episodeTitle={post.episodeTitle}/>\n            <p>{post.trackid}</p>\n          </h3>\n        </div>\n      ))}\n\n      <button onClick={handleClick}>Shuffle</button>\n      <button onClick={handleClick2}>Play/Pause</button>\n      <button onClick={handleClick3}>Previous</button>\n      <button onClick={handleClick4}>Next</button>\n      <p>{idx}</p>\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}