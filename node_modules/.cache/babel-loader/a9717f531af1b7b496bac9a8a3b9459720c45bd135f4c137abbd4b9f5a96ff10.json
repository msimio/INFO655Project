{"ast":null,"code":"var _jsxFileName = \"/Users/msimio/info655playlistcopy/src/Playlist.js\";\n//import logo from './logo.svg';\nimport './ExternalStylesheet.css';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport AudioData from './audio.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Playlist() {\n  var arr = [];\n\n  //use fetch and http endpoint instead of local implementation\n  //must be in proper folder to display index page\n\n  const getItemsFromApi = () => {\n    return fetch('https://localhost:3001').then(response => response.json()).then(json => {\n      return json.items;\n      arr.push(json.items);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  {\n    AudioData.map((audioDetail, index) => {\n      if (audioDetail.title) {\n        //return <h1>{audioDetail.title}</h1>\n        arr.push( /*#__PURE__*/_jsxDEV(Song, {\n          songtitle: audioDetail.title,\n          artist: audioDetail.artist,\n          year: audioDetail.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 18\n        }, this));\n        //arr.push title only??\n      } else {\n        //return <h1>{audioDetail.episodeTitle}</h1>\n        arr.push( /*#__PURE__*/_jsxDEV(Podcast, {\n          season: audioDetail.season,\n          episode: audioDetail.episode,\n          episodeTitle: audioDetail.episodeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this));\n      }\n    });\n  }\n  const listItems = arr.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: item\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 37\n  }, this));\n  const handleClick = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: \"none\"\n      },\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Shuffle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Play/Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Status Display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_c = Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["Song","Podcast","AudioData","jsxDEV","_jsxDEV","Playlist","arr","getItemsFromApi","fetch","then","response","json","items","push","catch","error","console","map","audioDetail","index","title","songtitle","artist","year","fileName","_jsxFileName","lineNumber","columnNumber","season","episode","episodeTitle","listItems","item","children","handleClick","style","listStyleType","onClick","_c","$RefreshReg$"],"sources":["/Users/msimio/info655playlistcopy/src/Playlist.js"],"sourcesContent":["//import logo from './logo.svg';\nimport './ExternalStylesheet.css';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport AudioData from './audio.json'\n\n\n\nexport default function Playlist() \n{\n  var arr =  []\n\n  //use fetch and http endpoint instead of local implementation\n  //must be in proper folder to display index page\n\n  const getItemsFromApi = () => {\n  return fetch('https://localhost:3001')\n    .then(response => response.json())\n    .then(json => {\n      return json.items;\n      arr.push(json.items)\n    })\n    .catch(error => {\n      console.error(error);\n    });\n};\n\n\n\n  {AudioData.map((audioDetail, index)=>{\n    if(audioDetail.title)\n      {\n        //return <h1>{audioDetail.title}</h1>\n        arr.push(<Song songtitle={audioDetail.title} artist= {audioDetail.artist} year={audioDetail.year}/>)\n        //arr.push title only??\n      }\n    else\n    {\n      //return <h1>{audioDetail.episodeTitle}</h1>\n      arr.push(<Podcast season={audioDetail.season} episode= {audioDetail.episode} episodeTitle={audioDetail.episodeTitle}/>)\n    \n    }\n\n\n    \n  })}\n\n  const listItems = arr.map(item => <li>{item}</li>);\n\n  const handleClick = () => {};\n\n  return (\n    <div>\n      <ul style={{ listStyleType: \"none\" }}>{listItems}</ul>\n      <button onClick={handleClick}>Shuffle</button>\n      <button onClick={handleClick}>Play/Pause</button>\n      <button onClick={handleClick}>Previous</button>\n      <button onClick={handleClick}>Next</button>\n      <p>Status Display</p>\n    </div>\n  );\n\n\n  \n  \n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}