{"ast":null,"code":"var _jsxFileName = \"/Users/msimio/info655playlistcopycopy/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const getData = () => {\n    var requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n    fetch(\"http://localhost:3001/items\", requestOptions) ////This is cheating. I edited the json structure. Logic for properly displaying items.\n    .then(response => response.json()).then(result => setPosts(result)).catch(error => console.log(\"error\", error));\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(Song, {\n          songtitle: post.title,\n          artist: post.artist,\n          year: post.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Podcast, {\n          season: post.season,\n          episode: post.episode,\n          episodeTitle: post.episodeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Song","Podcast","jsxDEV","_jsxDEV","App","_s","posts","setPosts","getData","requestOptions","method","redirect","fetch","then","response","json","result","catch","error","console","log","children","map","post","songtitle","title","artist","year","fileName","_jsxFileName","lineNumber","columnNumber","season","episode","episodeTitle","_c","$RefreshReg$"],"sources":["/Users/msimio/info655playlistcopycopy/src/Playlist.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Song from './Song';\nimport Podcast from './Podcast';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n\n  const getData = () => {\n    var requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\",\n    };\n\n    fetch(\"http://localhost:3001/items\", requestOptions)////This is cheating. I edited the json structure. Logic for properly displaying items.\n      .then((response) => response.json())\n      .then((result) => setPosts(result))\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n\n\n  return (\n    <div>\n      {posts.map((post) => (\n        <div>\n          <h3>\n            <Song songtitle={post.title} artist= {post.artist} year={post.year} />\n            <Podcast season={post.season} episode= {post.episode} episodeTitle={post.episodeTitle}/>\n          </h3>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIC,cAAc,GAAG;MACnBC,MAAM,EAAE,KAAK;MACbC,QAAQ,EAAE;IACZ,CAAC;IAEDC,KAAK,CAAC,6BAA6B,EAAEH,cAAc,CAAC;IAAA,CACjDI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,MAAM,IAAKT,QAAQ,CAACS,MAAM,CAAC,CAAC,CAClCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC,CAAC;EAClD,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACdS,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAIN,oBACEL,OAAA;IAAAkB,QAAA,EACGf,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACdpB,OAAA;MAAAkB,QAAA,eACElB,OAAA;QAAAkB,QAAA,gBACElB,OAAA,CAACH,IAAI;UAACwB,SAAS,EAAED,IAAI,CAACE,KAAM;UAACC,MAAM,EAAGH,IAAI,CAACG,MAAO;UAACC,IAAI,EAAEJ,IAAI,CAACI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtE5B,OAAA,CAACF,OAAO;UAAC+B,MAAM,EAAET,IAAI,CAACS,MAAO;UAACC,OAAO,EAAGV,IAAI,CAACU,OAAQ;UAACC,YAAY,EAAEX,IAAI,CAACW;QAAa;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAjCID,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}